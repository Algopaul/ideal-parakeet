// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package research.simulation;

import "swirl_lm/utility/grid_parametrization.proto";

option java_multiple_files = true;

// Stores the boundary conditions of a variable for the 6 faces of the
// computational domain.
message BoundaryCondition {
  // The name of the variable for which the boundary conditions belongs to.
  optional string name = 1;

  // The information of a boundary condition for a specific fase.
  message BoundaryInfo {
    // The dimension of the boundary condition.
    optional int32 dim = 1;
    // The location of the boundary: 1 indicates the `high` end, and 0 indicates
    // the low end.
    optional int32 location = 2;
    // The type of the boundary condition.
    optional swirl_lm.BoundaryConditionType type = 3
        [default = BC_TYPE_UNKNOWN];
    // The value associated with this boundary if `type` is `DIRICHLET`.
    // TODO(wqing): make the value a 2D/3D array so that it can represent more
    // complex boundary conditions.
    optional float value = 4;
  }
  // The detailed information of each boundary.
  repeated BoundaryInfo boundary_info = 2;
}
